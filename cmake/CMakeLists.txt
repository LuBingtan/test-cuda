PROJECT(testCUDA)

SET(TESTCUDA_VERSION 0.46+devel)
SET(PROJECT_NAME testCUDA)
CMAKE_MINIMUM_REQUIRED(VERSION 2.4.6)
SET(CMAKE_INCLUDE_CURRENT_DIR TRUE)
message(${CMAKE_FIND_LIBRARY_PREFIXES})
find_library(LIB_CURL NAMES libstdc++fs.a ${CMAKE_FIND_LIBRARY_PREFIXES})
message(${LIB_CURL})
message(${CMAKE_CURRENT_SOURCE_DIR})
set(CATTEST ${CATTEST} /ext_data/image.cpp/ext_data/camera.cpp)
STRING(REPLACE "camera.cpp" "" REPTEST ${CATTEST})
message(${CATTEST})
message(${REPTEST})
IF(UNIX)
SET(SYS "LINUX")
MESSAGE("system is linux")
ENDIF()
IF(DEFINED SYS)
IF(SYS STREQUAL "LINUX")
MESSAGE(check ${SYS})
ENDIF()
ENDIF()
IF(NOT DEFINED OpenCV_INCLUDE_DIRS)
SET(OpenCV_INCLUDE_DIRS "213")
MESSAGE("first cv inc:" ${OpenCV_INCLUDE_DIRS})
ENDIF()
FIND_PACKAGE(CUDA REQUIRED)
FIND_PACKAGE(OpenCV REQUIRED)
IF(DEFINED OpenCV_LIBRARIES)
MESSAGE("find cv lib:" ${OpenCV_LIBRARIES})
ENDIF()
IF(DEFINED OpenCV_INCLUDE_DIRS)
MESSAGE("find cv inc:" ${OpenCV_INCLUDE_DIRS})
ENDIF()
FIND_LIBRARY(CVCORE
	NAMES opencv_lbgad opencv_fuzzy
	PATHS "/usr/local/lib" "/usr/local/lib")
FILE(GLOB CVCORE /usr/local/lib/*opencv*.so)
MESSAGE(${CVCORE})
#MESSAGE(${OpenCV_LIBRARIES})
MESSAGE(${CUDA_INCLUDE_DIRS})
MESSAGE(${CUDA_LIBRARIES})
set(STRTEST ${CUDA_INCLUDE_DIRS} ${OpenCV_INCLUDE_DIRS})
message(${STRTEST})
FIND_FILE(CVH_DIR cv.h)
MESSAGE(${CVH_DIR})
IF(DEFINED MYDIR)
MESSAGE("SUCCSSES")
MESSAGE(${MYDIR})
ENDIF()
INCLUDE_DIRECTORIES(
./
${STRTEST}
)
SET(CMAKE_C_COMPILER g++)
add_compile_options(-std=c++11)
add_compile_options(-g)
FILE(GLOB TESTSRC ../../ImageServer/*.cpp)
MESSAGE(${TESTSRC})
STRING(REPLACE "${CMAKE_CURRENT_SOURCE_DIR}/../../ImageServer/camera.cpp" "" NEWSTR ${TESTSRC})
message(${NEWSTR})
FILE(GLOB CUSRC ../src/*.cu)
FILE(GLOB CPPSRC ../src/*.cpp)
SET(EXECUTABLE_OUTPUT_PATH ../../lib/)
MESSAGE(${CUSRC})
MESSAGE(${CPPSRC})
#set(SRC_LIST ./testcuda.cpp ./kernel.cu)
set(LIBTEST ${CUDA_LIBRARIES} ${OpenCV_LIBRARIES})
CUDA_ADD_EXECUTABLE(testCUDA ${CUSRC} ${CPPSRC})
target_link_libraries(testCUDA ${LIBTEST})
